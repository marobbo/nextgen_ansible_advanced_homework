- name: Create instances
  os_server:
    cloud: openstack
    name: "{{ item.value.name }}"
    state: "{{ item.value.state }}"
    image: "{{ item.value.image }}"
    key_name: "{{ item.value.key_name }}"
    flavor: "{{ item.value.flavor }}"
    security_groups: "{{ item.value.security_group }}"
    nics:
      - net-name: int_network
    meta: "{{ item.value.meta }}"
    userdata: |
      #!/bin/bash 
      curl -o /tmp/openstack.pub http://www.opentlc.com/download/ansible_bootcamp/openstack_keys/openstack.pub 
      cat /tmp/openstack.pub >> /home/cloud-user/.ssh/authorized_keys
      curl -o /tmp/openstack.pub http://www.opentlc.com/download/ansible_bootcamp/openstack_keys/openstack.pem 
      cat /tmp/openstack.pem >> /home/cloud-user/.ssh/authorized_keys
      curl -o /tmp/internal.repo http://www.opentlc.com/download/ansible_bootcamp/repo/internal.repo
      cp /tmp/internal.repo /etc/yum.repos.d/internal.repo
  with_dict: "{{ osp_servers }}"

- name: Add floating IP to instance
  os_floating_ip:
    cloud: openstack
    state: present
    reuse: yes
    server: "{{ iten.value.name }}"
    network: ext_network
    wait: true
    timeout: 200
  with_dict: "{{ osp_servers }}"

- name: OpenStack servers
  os_server_facts:
    cloud: ospcloud
  register: result

- name: Wait for server to be available
  wait_for:
    host: "{{ item.public_v4 }}"
    port: 22
    search_regex: OpenSSH
    timeout: 600
  delegate_to: "{{ inventory_hostname }}"
  with_items: 
    - "{{ result.ansible_facts.openstack_servers }}"
